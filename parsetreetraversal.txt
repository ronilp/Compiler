PREORDER TRAVERSAL

<program> <functions> e <main_function> TK_MAIN TK_LPAR TK_RPAR TK_NEWLINE <function_body> TK_LBRACE TK_NEWLINE <stmt> <type> TK_PROTEIN TK_ID,P,3 <squarebracket> TK_LSQBRAC TK_INTEGERLITERAL,20,3 TK_RSQBRAC TK_NEWLINE <stmt> TK_ID,P,4 <X> TK_ASSIGNOP <stmt1> <Expr> <Expr2> <mulexp> <divexp> <mod> <cut> "AAGTCCAGGATGCA" <cut1> e <mod1> e <divexp1> e <mulexp1> e <Expr3> e TK_NEWLINE <stmt> <type> TK_INT TK_ID,i,5 <squarebracket> e TK_NEWLINE <stmt> <loop> TK_REPEAT TK_ID,i,6 TK_FROM <Expr> <Expr2> <mulexp> <divexp> <mod> <cut> TK_INTEGERLITERAL,0,6 <cut1> e <mod1> e <divexp1> e <mulexp1> e <Expr3> e TK_TO <Expr> <Expr2> <mulexp> <divexp> <mod> <cut> TK_LENGTH <more> TK_LPAR <more1> TK_ID,P,6 <args> e TK_RPAR <cut1> e <mod1> e <divexp1> e <mulexp1> e <Expr3> e TK_NEWLINE TK_LBRACE TK_NEWLINE <stmt> <ifelse> TK_CONDITION TK_LPAR <logicalexpr> <Expr> <Expr2> <mulexp> <divexp> <mod> <cut> TK_ID,P,8 <ext> TK_LSQBRAC TK_ID,i,8 TK_RSQBRAC <cut1> e <mod1> e <divexp1> e <mulexp1> e <Expr3> e <relop> TK_COMPARE <Expr> <Expr2> <mulexp> <divexp> <mod> <cut> "T" <cut1> e <mod1> e <divexp1> e <mulexp1> e <Expr3> e <logicop> e TK_RPAR TK_NEWLINE TK_LBRACE TK_NEWLINE <stmt> <IO> TK_WRITE TK_LPAR <L> "DNA" TK_RPAR TK_NEWLINE <stmt> TK_END TK_NEWLINE <stmt> e TK_RBRACE TK_NEWLINE <elseclause> TK_OTHERWISE <otherwise1> TK_NEWLINE TK_LBRACE TK_NEWLINE <stmt> <IO> TK_WRITE TK_LPAR <L> "RNA" TK_RPAR TK_NEWLINE <stmt> TK_END TK_NEWLINE <stmt> e TK_RBRACE TK_NEWLINE <stmt> e TK_RBRACE TK_NEWLINE <stmt> <IO> TK_WRITE TK_LPAR <L> "Neither DNA nor RNA" TK_RPAR TK_NEWLINE <stmt> e TK_RETURN <Expr1> e TK_NEWLINE TK_RBRACE 