PREORDER TRAVERSAL
<program> <functions> e <main_function> TK_MAIN TK_LPAR TK_RPAR TK_NEWLINE <function_body> TK_LBRACE TK_NEWLINE <stmt> <type> TK_INT  <squarebracket> e TK_NEWLINE <stmt> <type> TK_INT  <squarebracket> e TK_NEWLINE <stmt> <IO> TK_READ TK_LPAR <L>  <L1> e TK_RPAR TK_NEWLINE <stmt> <IO> TK_READ TK_LPAR <L>  <L1> e TK_RPAR TK_NEWLINE <stmt> <type> TK_INT  <squarebracket> e TK_NEWLINE <stmt> <type> TK_INT  <squarebracket> e TK_NEWLINE <stmt>  <X> TK_ASSIGNOP <stmt1> <Expr> <Expr2> <mulexp> <divexp> <mod> <cut>  <ext> e <cut1> e <mod1> e <divexp1> e <mulexp1> TK_MULTIPLY <mulexp> <divexp> <mod> <cut>  <ext> e <cut1> e <mod1> e <divexp1> e <Expr3> <AS> TK_PLUS <Expr> <Expr2> <mulexp> <divexp> <mod> <cut>  <cut1> e <mod1> e <divexp1> e <mulexp1> e <Expr3> e TK_NEWLINE <stmt>  <X> TK_ASSIGNOP <stmt1> <Expr> <Expr2> <mulexp> <divexp> <mod> <cut>  <ext> e <cut1> e <mod1> e <divexp1> e <mulexp1> TK_MULTIPLY <mulexp> <divexp> <mod> <cut> TK_LPAR <Expr> <Expr2> <mulexp> <divexp> <mod> <cut>  <ext> e <cut1> e <mod1> e <divexp1> e <mulexp1> e <Expr3> <AS> TK_PLUS <Expr> <Expr2> <mulexp> <divexp> <mod> <cut>  <cut1> e <mod1> e <divexp1> e <mulexp1> e <Expr3> e TK_RPAR <cut1> e <mod1> e <divexp1> e <Expr3> e TK_NEWLINE <stmt> <IO> TK_WRITE TK_LPAR <L>  TK_RPAR TK_NEWLINE <stmt> <IO> TK_WRITE TK_LPAR <L>  <L1> e TK_RPAR TK_NEWLINE <stmt> <IO> TK_WRITE TK_LPAR <L>  TK_RPAR TK_NEWLINE <stmt> <IO> TK_WRITE TK_LPAR <L>  <L1> e TK_RPAR TK_NEWLINE <stmt> e TK_RETURN <Expr1> e TK_NEWLINE TK_RBRACE 